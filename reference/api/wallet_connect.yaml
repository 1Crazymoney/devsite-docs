openapi: 3.0.0
servers:
  - url: https://api.mercadopago.com
info:
  title: Mercado Pago API Reference
  version: '1.0'
paths:
  /v2/wallet_connect/agreements:
    post:
      tags:
        - $ref: '#/tags/checkout-api'
      summary: Create Agreement
      description: An agreement is an authorization link that the buyer receives to allow the seller to access their Mercado Pago wallet to debit the payment
      parameters:
        - name: client.id
          in: query
          description: Unique ID that identifies a specific Client
          schema:
            type: number
            example: 2451675580092619
      requestBody:
        description: Here are the fields needed to complete a request for create an Agreement
        content:
          application/json:
            schema:
              type: object
              properties:
                return_url:
                  type: string
                  description: URL that redirects the user back to the sellers site
                  example: https://www.mercadopago.com/
                external_flow_id:
                  type: string
                  description: Identifies the Seller side flow current state
                  example: EXTERNAL_FLOW_ID
                external_user:
                  type: object
                  description: The external_user contains the data that the Seller will need to use to indentify a User, so then it can continue with their own flow.
                  properties:
                    id:
                      required: true
                      type: string
                      description: Unique ID that is going to be used by the Seller to identify the external_user
                      example: usertest
                    description:
                      required: true
                      type: string
                      description: A brief description with information of the user. It can contains for example the name of the user
                      example: Test account
                agreement_data:
                  type: object
                  description: Contains information about actions the user must do and the amount to be paid
                  properties:
                    validation_amount:
                      required: false
                      type: number
                      description: Amount that the user is going to pay
                      example: 3.14
                    description:
                      type: string
                      required: false
                      description: Description of the actions that the user is trying to perform
                      example: Test agreement
      responses:
        '200':
          description: Agreement created
          content:
            application/json:
              schema:
                description: Agreement that contains an unique identifier and a success URL.
                type: object
                properties:
                  agreement_id:
                    type: string
                    description: Unique ID that identifies an Agreement
                    example: b1234e5678b91c23a456e78912345b67
                  agreement_uri:
                    type: string
                    description: This is the uri to redirect the user to the wallet linking in the frontend
                    example: https://beta.mercadopago.com.ar/v1/wallet_agreement/b1234e5678b91c23a456e78912345b67
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorKey:
                    type: string
                    enum:
                      - 400--Bad-Request--Field return_uri is required
                      - 400--Bad-Request--Field external_flow_id is required
                      - 400--Bad-Request--Field return_uri must not be grater than 300 characters
                      - 400--Bad-Request--Field external_flow_id must not be grater than 300 characters
                      - 400--Bad-Request--Field external_user must not be blank
                      - 400--Bad-Request--Field id must not be blank
  /v2/wallet_connect/agreements/{agreement_id}/payer_token:
    post:
      tags:
        - $ref: '#/tags/checkout-api'
      summary: Create payer token
      description: A payer token is an ID that represents the authorization the user gave to the seller
      parameters:
        - name: agreement_id
          in: path
          description: Unique ID that identifies an Agreement
          required: true
          schema:
            type: string
            example: b1234e5678b91c23a456e78912345b67
        - name: client.id
          in: query
          description: Unique ID that identifies a specific Client
          required: true
          schema:
            type: number
            example: 1451895580758649
        - name: caller.id
          in: query
          description: Unique ID that identifies a specific Caller
          required: true
          schema:
            type: number
            example: 832564722
      requestBody:
        content:
          application/json:
            schema:
              description: It's a reference of the authorization that the user gave to the seller
              type: object
              properties:
                code:
                  type: string
                  description: This is the payer token. It is a reference to the Id that represents the authorization of the user
                  example: aeecea3e11f2545d1e7790eb6591ff68df74c57930551ed980239f4538a7e530
      responses:
        '200':
          description: Payer token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  payer_token:
                    type: string
                    description: This is the token of the payer.
                    example: abcdef1e23f4567d8e9123eb6591ff68df74c57930551ed980239f4538a7e530
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorKey:
                    type: string
                    enum:
                      - 400--Bad-Request--Parameter agreement_id is required
                      - 400--Bad-Request--Parameter agreementId has more than 32 characters
                      - 400--Bad-Request--Parameter agreement_id must be an alfanumeric value
                      - 400--Bad-Request--Invalid value for back_url. Must be a valid URL
                      - 400--Bad-Request--Parameter client.id must be a valid id
                      - 400--Bad-Request--Parameter caller.id must be a valid id
        '404':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorKey:
                  type: string
                  enum:
                    - 404--Not-Found--The agreement_id does not exist
                    - 404--Not-Found--The client.id does not exist
                    - 404--Not-Found--The caller.id does not exist
        '500':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorKey:
                    type: string
                    enum:
                      - 500--Error--Internal server error
  /v2/wallet_connect/agreements/{agreement_id}:
    delete:
      tags:
        - $ref: '#/tags/checkout-api'
      summary: Cancel agreement
      description: Endpoint to cancel an agreement by id. An agreement is an authorization link that the buyer receives to allow the seller to access their Mercado Pago wallet to debit the payment. You will need to cancel an agreement when the vinculation flow has ended
      operationId: "cancelAgreement_DELETE"
      parameters:
        - name: agreementId
          in: path
          description: Unique ID that identifies an Agreement
          required: true
          schema:
            type: string
            example: b1234e5678b91c23a456e78912345b67
        - name: client.id
          in: query
          description: Unique ID that identifies a Client
          required: false
          schema:
            type: number
            example: 1451895580758649
      responses: 
        '200':
          description: Success
          name: Agreement cancelled
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                errorKey:
                  type: string
                  enum:
                    - 400--Bad-Request--Parameter agreement_id is required
                    - 400--Bad-Request--Parameter agreementId has more than 32 characters
                    - 400--Bad-Request--Parameter agreement_id must be an alfanumeric value
        '404':
          content:
          application/json:
            schema:
              type: object
              properties:
              errorKey:
                type: string
                enum:
                  - 404--Not-Found--The Agreement with that id
        '500':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorKey:
                    type: string
                    enum:
                      - 500--Error--Internal server error